{"version":3,"sources":["../node_modules/@noble/hashes/utils.js","../node_modules/@noble/ed25519/lib/esm/index.js","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../../src/structs/coercions.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../../src/utils/ed25519.ts","../../src/utils/to-buffer.ts","../../src/utils/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/account.ts","../../src/transaction/constants.ts","../../src/transaction/expiry-custom-errors.ts","../../src/message/account-keys.ts","../../src/layout.ts","../../src/utils/shortvec-encoding.ts","../../src/utils/assert.ts","../../src/transaction/legacy.ts","../../src/message/compiled-keys.ts","../../src/message/legacy.ts","../../src/message/v0.ts","../../src/sysvar.ts","../../src/utils/send-and-confirm-transaction.ts","../../src/utils/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/utils/bigint.ts","../../src/nonce-account.ts","../../src/programs/system.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/programs/address-lookup-table/state.ts","../../src/account-data.ts","../../src/utils/makeWebsocketUrl.ts","../../src/connection.ts","../../src/keypair.ts","../../src/programs/address-lookup-table/index.ts","../../src/programs/compute-budget.ts","../../src/programs/ed25519.ts","../../src/utils/secp256k1.ts","../../src/programs/secp256k1.ts","../../src/programs/stake.ts","../../src/programs/vote.ts","../../src/validator-info.ts","../../src/vote-account.ts","../node_modules/@noble/hashes/_assert.js","../node_modules/@noble/hashes/_sha2.js","../node_modules/@noble/hashes/_u64.js","../../src/Layout.ts","../node_modules/@noble/hashes/sha512.js","../node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/bs58/index.js","../node_modules/@solana/web3.js/node_modules/base-x/src/index.js","../node_modules/@noble/hashes/sha256.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/borsh/node_modules/bs58/index.js","../node_modules/borsh/node_modules/base-x/src/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/@noble/hashes/sha3.js","../node_modules/@noble/hashes/hmac.js"],"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","this","_cloneInto","defaults","opts","undefined","obj","prototype","call","constructor","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node","_0n","BigInt","_1n","_2n","CU_O","CURVE","freeze","d","P","l","n","h","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","T1","T2","double","add","negate","W","windows","points","p","base","window","push","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","get","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","offset","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","acc","num","reduceRight","invertBatch","map","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","s","numberTo32BytesLE","toRawBytes","toHex","b","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","bytes","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","Signature","assertValidity","fromHex","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","res","number","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","hash","expectedLength","max","isSafeInteger","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","sha512","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","nodeCrypto","self","TORSION_SUBGROUP","hashToPrivateScalar","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","toFailures","StructError","failure","failures","rest","path","join","name","isObject","print","JSON","stringify","shiftIterator","input","next","done","toFailure","context","struct","branch","type","refinement","Symbol","iterator","run","options","coerce","ctx","coercer","schema","isArray","valid","validator","entries","Map","Set","refiner","Struct","props","assert","is","validate","tuples","tuple","error","define","Element","boolean","instance","Class","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","union","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","sum","isShort","bytesToNumber","subarray","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","len","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","fill","counter","values","hmacSha256","seed","hmac","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","e","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","sha256","messages","forEach","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tag","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","Buffer","isBuffer","properties","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toJSON","toArrayLike","zeroPad","alloc","copy","unique","createWithSeed","fromPublicKey","programId","concat","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddress","pubkeyData","default","kind","fields","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","property","BufferLayout","rustString","rsl","_decode","bind","_encode","rslShim","chars","span","getAlloc","getItemAlloc","item","field","elementLayout","layout","decodeLength","size","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","state","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","compile","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","Layout","transaction","signData","payerKey","byteArray","accountCount","dataSlice","MessageV0","numAccountKeysFromLookups","count","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","hasOwnProperty","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","includes","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","confirmTransaction","status","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","u64","blob","encodeDecode","bigIntLayout","src","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","createAccount","params","lamports","space","fromPubkey","newAccountPubkey","transfer","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","createNonceAccount","noncePubkey","initParams","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","newAuthorizedPubkey","allocate","Loader","getMinNumSignatures","ceil","chunkSize","load","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","code","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetParsedBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","process","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","getBalance","then","catch","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","encoding","configWithoutEncoding","getParsedProgramAccounts","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","limit","getSignatureStatus","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","getParsedBlock","getBlockProduction","extra","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonceAndContext","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","MS_PER_SLOT","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","createLookupTable","recentSlot","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","keccak_256","recoveryId","Secp256k1Program","createInstructionWithEthAddress","ethAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","initialize","stakePubkey","lockup","staker","withdrawer","delegate","authorize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorizeWithSeed","authorityBase","authoritySeed","authorityOwner","splitInstruction","splitStakePubkey","split","splitWithSeed","merge","sourceStakePubKey","withdraw","deactivate","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","website","details","keybaseUsername","bool","lengths","exists","checkFinished","destroyed","finished","output","out","min","SHA2","_assert_js_1","utils_js_1","padOffset","pos","view","take","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","digestInto","destroy","toBig","fromBig","U32_MASK64","le","lst","Ah","Al","Bh","Bl","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","discr","sha384","sha512_256","SHA512","_sha2_js_1","_u64_js_1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","module","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","start","end","mul","move","dest","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","lo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","basex","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","__createBinding","enumerable","__setModuleDefault","__decorate","decorators","target","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","buf","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","writeU32","fn","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","apply","RangeError","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","idx","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","String","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","reversed","toBigIntBE","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","emit","onmessage","event","onerror","onclose","reason","optionsOrCallback","send","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","listeners","_ref2","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","shake256","shake128","keccak_512","keccak_384","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","suffix","enableXOF","posOut","state32","keccak","finish","bufferOut","writeInto","xofInto","gen","genShake","dkLen","HMAC","_key","iHash","oHash","getPrototypeOf"],"mappings":"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","file":"static/js/2.8e8da8d1.chunk.js","sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetParsedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    return res.result;\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n"],"sourceRoot":""}